{
    "contents" : "\n#' Stewart's Potentials\n#'\n#' Compute and plot Stewart's Potentials\n#'\n#' This function compute the potentials of spatial interaction as defined by J.Q. Stewart (1950) and plot the results.\n#' It provides two kinds of outputs: a data.frame or a raster map (ggplot) representing potentials of interaction. \n#'\n#' @param knownpts, object of class sp (SpatialPointsDataFrame or SpatialPolygonsDataFrame).\n#' @param mask, object of class sp (SpatialPolygonsDataFrame) to clip the final map of potentials.\n#' @param opportgrid, output of the PointOpport() function. This object is a list containing a grid of unknown points, \n#' a matrix of opportunities and a projection.\n#' @param varname CHARACTER, name of the variable (in the attribute table) from which potentials are computed. \n#' Quantitative variable with no negative values.\n#' @param typedist CHARACTER, type of distance. Options are \"euclidean\" (default) or \"orthodromic\". \n#' If the distance is euclidean, X and Y coordinates are expected. If orthodromic longitud and latitud are expected \n#' in decimal degrees, in WGS84 reference system.)\n#' @param typefct CHARACTER, spatial interaction function. Options are \"pareto\" (default) or \"exponential\".\n#' If \"pareto\" the interaction is defined as: (1 + alpha * mDistance) ^ (-beta).\n#' If \"exponential\" the interaction is defined as: exp(- alpha * mDistance ^ beta).\n#' The alpha parameter is computed from parameters given by the user (beta and reach).\n#' @param beta NUMERIC, impedance factor for the spatial interaction function.\n#' @param span NUMERIC, distance where the density of probability of the spatial interaction function equals 0.5.\n#' @param nbclass INTEGER, number of classes for the cartographic representation.\n#' @param resolution INTEGER, resolution of the grid for raster representation.\n#' @references Stewart J. Q., Demographic gravitation: evidence and applications, Sociometry, 11(1-2), 31-58.\n\n\n# load packages ----\n\nlibrary(sp)\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(raster)\nlibrary(fields)\nlibrary(RColorBrewer)\n\n\n# load functions ----\n\nsource(\"Potentials_functions.R\")\n\n\n# load data ----\n\nspatPts <- readOGR(dsn = \"DATA/parispc_pts.shp\", layer = \"parispc_pts\", stringsAsFactors = FALSE)\nspatUnits <- readOGR(dsn = \"DATA/parispc_com.shp\", layer = \"parispc_com\", stringsAsFactors = FALSE)\nspatMask <- readOGR(dsn = \"DATA/parispc_mask.shp\", layer = \"parispc_mask\", stringsAsFactors = FALSE)\n\nplot(spatMask)\nplot(spatUnits)\nplot(spatPts, add = T)\n\n\n# compute opportunities ----\n\nopportunities <- PointsOpport(knownpts = spatPts, \n                              varname = \"POPULATION\",\n                              span = 1500, \n                              beta = 3, \n                              mask = spatMask, \n                              resolution = 200)\n\n\n# compute potentials ----\n\npotentials <- OpportPotentials(opportgrid = opportunities, \n                               nbclass = 8, \n                               mask = spatMask)\n\n\n# plot potentials ----\n\nplot(potentials, col = plyr::mapvalues(potentials$layer, \n                                       from = potentials$layer, \n                                       to = brewer.pal(n = 8, name = \"Reds\")))\n\n\n# generalize polygons geometry ----\n\nlibrary(spgrass6)\ninitGRASS(gisBase = \"/usr/lib/grass64\", home = getwd(), override = TRUE)\nwriteVECT6(SDF = potentials, vname = \"inpol\", v.in.ogr_flags = c(\"o\", \"overwrite\"))\nexecGRASS(\"v.generalize\", flags = c(\"overwrite\"), input = \"inpol\", output = \"outpol\", threshold = 1, method = \"snakes\", alpha = 1, beta = 1)\ngenPol <- readVECT6(vname = \"outpol\")\n\nplot(genPol, col = plyr::mapvalues(genPol$cat, \n                                   from = genPol$cat, \n                                   to = brewer.pal(n = 8, name = \"Reds\")))\n\n\n\n\n\n",
    "created" : 1421967600302.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "682149073",
    "id" : "1B0459D6",
    "lastKnownWriteTime" : 1421992482,
    "path" : "~/Repositories/StewartPotentials/Potentials_script.R",
    "project_path" : "Potentials_script.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}